name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build-test:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]

    runs-on: ${{ matrix.os }}

    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos-15'
        with:
          xcode-version: latest-stable

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Display PlatformIO Information
        run: |
          pio system info
          g++ --version
          gcc --version

      - name: build
        run: pio run

      - name: test
        if: matrix.os != 'windows-latest'
        run: pio test -e native -v

      - name: test (windows)
        if: matrix.os == 'windows-latest'
        run: pio test -e native-windows -v

      - name: static analysis
        run: pio check --skip-packages --fail-on-defect high

  publish-build:
    needs: build-test
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push')
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build release firmware
        env:
          INCLUDE_GIT_HASH_IN_VERSION_NUMBER: true
        run: pio run -e trmnl

      - name: Name files
        run: |
          echo "MERGED_FIRMWARE_FILE=trmnl-merged.$(git rev-parse --short ${{ github.sha }}).bin" >> $GITHUB_ENV
          echo "APP_FIRMWARE_FILE=trmnl-app.$(git rev-parse --short ${{ github.sha }}).bin" >> $GITHUB_ENV

      - name: Create combined firmware image
        run: ./scripts/merge_firmware.sh .pio/build/trmnl ${{ env.MERGED_FIRMWARE_FILE }}

      - name: Copy application firmware
        run: cp .pio/build/trmnl/firmware.bin ${{ env.APP_FIRMWARE_FILE }}

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware images
          path: "*.bin"
          retention-days: 30

      - name: Add firmware documentation
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## 📦 Firmware Artifacts

          Two firmware images have been built:

          ### 🔄 `${{ env.MERGED_FIRMWARE_FILE }}` - Full Firmware
          - **Complete factory image** with bootloader, partitions, and application
          - **⚠️ Wipes all persistent storage** (settings, wifi credentials, etc.)
          - Use for initial flashing or factory reset
          - Flash command: `./scripts/flash_merged.sh ${{ env.MERGED_FIRMWARE_FILE }}`

          ### ⚡ `${{ env.APP_FIRMWARE_FILE }}` - Application Only
          - **Application firmware only** 
          - **✅ Preserves persistent storage** (settings, wifi credentials, etc.)
          - Use for updates without losing configuration
          - Flash command: `./scripts/flash_app.sh ${{ env.APP_FIRMWARE_FILE }}`
          EOF
